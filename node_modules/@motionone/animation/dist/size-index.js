const t=.3,e=0,i=0,s=0,a="ease",n=t=>Array.isArray(t)&&!("number"==typeof t[0]),r=(t,e,i)=>-i*t+i*e+t,h=t=>t,o=(t,e,i)=>e-t==0?1:(i-t)/(e-t);function c(t,e){const i=t[t.length-1];for(let s=1;s<=e;s++){const a=o(0,e,s);t.push(r(i,1,a))}}const l=(t,e,i)=>(((1-3*i+3*e)*t+(3*i-6*e))*t+3*e)*t;function m(t,e,i,s){if(t===e&&i===s)return h;const a=e=>function(t,e,i,s,a){let n,r,h=0;do{r=e+(i-e)/2,n=l(r,s,a)-t,n>0?i=r:e=r}while(Math.abs(n)>1e-7&&++h<12);return r}(e,0,1,t,i);return t=>0===t||1===t?t:l(a(t),e,s)}const u=(t,e="end")=>i=>{const s=(i="end"===e?Math.min(i,.999):Math.max(i,.001))*t,a="end"===e?Math.floor(s):Math.ceil(s);return n=0,r=1,h=a/t,Math.min(Math.max(h,n),r);var n,r,h},p={ease:m(.25,.1,.25,1),"ease-in":m(.42,0,1,1),"ease-in-out":m(.42,0,.58,1),"ease-out":m(0,0,.58,1)},f=/\((.*?)\)/;function d(t){if("function"==typeof t)return t;if(Array.isArray(t))return m(...t);if(p[t])return p[t];if(t.startsWith("steps")){const e=f.exec(t);if(e){const t=e[1].split(",");return u(parseFloat(t[0]),t[1].trim())}}return h}function y(t,e){return n(t)?t[((t,e,i)=>{const s=e-t;return((i-t)%s+s)%s+t})(0,t.length,e)]:t}function T(t,e=function(t){const e=[0];return c(e,t-1),e}(t.length),i=h){const s=t.length,a=s-e.length;return a>0&&c(e,a),a=>{let n=0;for(;n<s-2&&!(a<e[n+1]);n++);let h=(c=o(e[n],e[n+1],a),Math.min(1,Math.max(c,0)));var c;return h=y(i,n)(h),r(t[n],t[n+1],h)}}class v{constructor(r,o=[0,1],{easing:c=a,duration:l=t,delay:m=e,endDelay:u=i,repeat:p=s,offset:f,direction:y="normal"}={}){if(this.startTime=null,this.rate=1,this.t=0,this.cancelTimestamp=null,this.playState="idle",this.finished=new Promise(((t,e)=>{this.resolve=t,this.reject=e})),(t=>"object"==typeof t&&Boolean(t.createAnimation))(c)){const t=c.createAnimation(o,(()=>"0"),!0);c=t.easing,void 0!==t.keyframes&&(o=t.keyframes),void 0!==t.duration&&(l=t.duration)}const v=n(c)?h:d(c),M=l*(p+1),g=T(o,f,n(c)?c.map(d):h);this.tick=t=>{var e;this.pauseTime&&(t=this.pauseTime);let i=(t-this.startTime)*this.rate;this.t=i,i/=1e3,i=Math.max(i-m,0),"finished"===this.playState&&(i=M);const s=i/l;let a=Math.floor(s),n=s%1;!n&&s>=1&&(n=1),1===n&&a--;const h=a%2;("reverse"===y||"alternate"===y&&h||"alternate-reverse"===y&&!h)&&(n=1-n);const o=i>=M?1:Math.min(n,1),c=g(v(o));r(c);"finished"===this.playState||i>=M+u?(this.playState="finished",null===(e=this.resolve)||void 0===e||e.call(this,c)):"idle"!==this.playState&&(this.frameRequestId=requestAnimationFrame(this.tick))},this.play()}play(){var t;const e=performance.now();this.playState="running",this.pauseTime?this.startTime=e-(this.pauseTime-(null!==(t=this.startTime)&&void 0!==t?t:0)):this.startTime||(this.startTime=e),this.cancelTimestamp=this.startTime,this.pauseTime=void 0,requestAnimationFrame(this.tick)}pause(){this.playState="paused",this.pauseTime=performance.now()}finish(){this.playState="finished",this.tick(0)}stop(){var t;this.playState="idle",void 0!==this.frameRequestId&&cancelAnimationFrame(this.frameRequestId),null===(t=this.reject)||void 0===t||t.call(this,!1)}cancel(){this.stop(),this.tick(this.cancelTimestamp)}reverse(){this.rate*=-1}commitStyles(){}get currentTime(){return this.t}set currentTime(t){this.pauseTime||0===this.rate?this.pauseTime=t:this.startTime=performance.now()-t/this.rate}get playbackRate(){return this.rate}set playbackRate(t){this.rate=t}}export{v as Animation,y as getEasingForSegment,d as getEasingFunction};
